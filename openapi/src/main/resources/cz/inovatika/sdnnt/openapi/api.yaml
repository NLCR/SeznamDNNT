openapi: 3.0.2
info:
  title: SDNNT API
  description: |

    API přístupné pouze pro uživatele s vygenerovaným platným API-KEY.

    Umožňuje následující:
      - Nahlížet a vyhledávat v katalogu
      - Zobrazit a filtrovat všechny uživatelské návrhy
      - Podávat hromadné požadavky a návrhy na zařazení resp. vyřazení díla ze seznamu.

  version: 1.0.0

externalDocs:
  description: Externí dokumentace k projektu
  url: 'https://sdnnt.nkp.cz'

servers:
  - url: ../api/v1.0
tags:
  - name: Požadavky
    description: Endpoint, který řeší kompletně správu požadavků
  - name: Katalog
    description: Endpoint pro hledání v katalogu

paths:

  /catalog:
    get:
      tags:
        - Katalog
      summary: Nahlížení do katalogu
      description: |
        Umožňuje vyhledávat a prohlížet data v katalogu. Předdefinované filtry
          - Licence - licence díla (**DNNTT**, **DNNTO**)
          - Stavy - Stav díla (**A**, **PA**, **V**, **N**, **X**)

      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
        - in: query
          name: state
          schema:
            type: string
            enum: ["A","PA","V","N", "X"]
          required: false
        - in: query
          name: license
          schema:
            type: string
            enum: ["dnntt","dnnto"]
          required: false

        - in: query
          name: fmt
          schema:
            type: string
            enum: ["BK","SE"]
          required: false


        - in: query
          name: rows
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          required: false



      responses:
        '200':
          description: Záznamy z katalogu
          content:
            application/json:
              schema:
                $ref: './schemas/catalog/CatalogResponse.yaml'
      security:
        - api_key: []



  /request:
    get:
      tags:
        - Požadavky
      summary: Návrhy a požadavky
      description: Vrací všechny návrhy a požadavky pro konkrétního uživatele, umožňuje filtrovat dle stavu
      operationId: requestGet
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ["open", "waiting", "waiting_for_automatic_process", "processed"]
          required: false
        - in: query
          name: itemstatus
          schema:
            type: string
            enum: ["approved","rejected"]
          required: false

        - in: query
          name: navrh
          schema:
            type: string
            enum: ["NZN","VN", "VNL","VNZ"]
          required: false


      responses:
        '200':
          description: Všechny uložené žádosti
          content:
            application/json:
              schema:
                $ref: './schemas/requests/ArrayOfSavedRequest.yaml'
      security:
        - api_key: []


  /request/batch/nzn:
    put:
      tags:
        - Požadavky
      summary: Hromadný návrh k zařazení do seznamu
      description: |
        Řeší návrh k zařazení na seznam.
          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.
          - Dílo je identifikováno identifikátorem ze souborného katalogu.
          - Dílo musí být ve stavu **N** nebo mimo seznam.
      operationId: requestBatchNzn
      requestBody:
        description: Hromadný návrh (jeden nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)
        content:
          application/json:
            schema:
              #$ref: '#/components/schemas/BatchRequest'
              $ref: './schemas/requests/BatchRequest.yaml'
        required: true

      responses:
        '200':
          description: |
            Návratová hodnota obsahuje pole **saved** a **notsaved**. V poli **saved** jsou uložené žádosti, které byly úspěšně uloženy a jdou dohledat v uživatelském rozhraní.  
            Žádost se uloží vždy, pokud obsahuje alespoň jednu validní položku. Validní položka musí splňovat:
             - kritérium dohledatelnosti - Jde vyhledat v uživatelském rozhraní
             - kritérium místa vydání - V poli marc 008 je uvedena hodnota **XR**  - Místo vydání ČR 
             - kritérium formátu - Formát musí být BK (kniha) nebo SE (Seriál)
             - kritérium akceptovatelného stavu - Dílo nesmí být ve stavu A (Zařazeno), PA (Návrh na zařazení), X (Volné dílo)
            ---
            Všechny položky v žádosti, které se neuložili jsou vidět ve struktuře **details**, kde je uvedeno: 
             - identifikátor 
             - stav 
             - důvod odmítnutí záznamu 
            ---
            Pokud žádost nemá ani jeden uložitelný záznam je obsažena v poli  **notsaved** 
          content:
            application/json:
              schema:
                #$ref: '#/components/schemas/BatchResponse'
                $ref: './schemas/requests/BatchResponse.yaml'
        '400':
          description: Špatný dotaz (syntaxe atd..)

      security:
        - api_key: []

  /request/batch/vn:
    put:
      tags:
        - Požadavky
      summary: Výzva k vyřazení ze seznamu
      description: |
        Řeší hromadnou výzvu k vyřazení ze seznamu.
          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.
          - Dílo je identifikováno identifikátorem ze souborného katalogu.
          - Dílo musí být ve stavu **A** případně **PA**
      operationId: requestBatchVN
      requestBody:
        description: Hromadná výzva (jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)
        content:
          application/json:
            schema:
              $ref: './schemas/requests/BatchRequest.yaml'
        required: true

      responses:
        '200':
          description: Žádost vytvořena a ve stavu waiting
          content:
            application/json:
              schema:
                $ref: './schemas/requests/BatchResponse.yaml'
        '400':
          description: Špatný dotaz (syntaxe atd..)

      security:
        - api_key: []


  /request/batch/vnl:
    put:
      tags:
        - Požadavky
      summary: Výzva k omezení na terminál / VNL
      description: |
        Řeší hromadnou hromadný požadavek .
          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.
          - Dílo je identifikováno identifikátorem ze souborného katalogu.
          - Dílo musí být ve stavu **A** případně **PA**

      operationId: requestBatchVnl
      requestBody:
        description: Hromadná výzva(jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)
        content:
          application/json:
            schema:
              $ref: './schemas/requests/BatchRequest.yaml'
        required: true

      responses:
        '200':
          description: Žádost vytvořena a ve stavu waiting
          content:
            application/json:
              schema:
                $ref: './schemas/requests/BatchResponse.yaml'
        '400':
          description: Špatný dotaz (syntaxe atd..)

      security:
        - api_key: []

  /request/batch/vnz:
    put:
      tags:
        - Požadavky
      summary: Výzva k omezení na terminál / VNZ
      description: |
        Řeší hromadnou hromadný požadavek o vyřazení z návrhu ze seznamu.
          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.
          - Dílo je identifikováno identifikátorem ze souborného katalogu.
          - Dílo musí být ve stavu **A** případně **PA**

      operationId: requestBatchVnz
      requestBody:
        description: Hromadná výzva(jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)
        content:
          application/json:
            schema:
              $ref: './schemas/requests/BatchRequest.yaml'
        required: true

      responses:
        '200':
          description: Žádost vytvořena a ve stavu waiting
          content:
            application/json:
              schema:
                $ref: './schemas/requests/BatchResponse.yaml'
        '400':
          description: Špatný dotaz (syntaxe atd..)

      security:
        - api_key: []

components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      description: Přihlášení pomocí API klíče. Musí být přiděleno administrátorem.
