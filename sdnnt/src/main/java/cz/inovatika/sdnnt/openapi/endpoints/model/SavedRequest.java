/*
 * SDNNT API
 *  API umožnuje vzdáleně spravovat svoje žádosti, vytvářet nové, prohlížet již poslané a procházet katalog.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package cz.inovatika.sdnnt.openapi.endpoints.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SavedRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-07-15T08:56:28.035Z[GMT]")public class SavedRequest extends Request  {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("navrh")
  private String navrh = null;

  @JsonProperty("indextime")
  private Date indextime = null;

  @JsonProperty("user")
  private String user = null;

  @JsonProperty("state")
  private String state = null;

  public SavedRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SavedRequest navrh(String navrh) {
    this.navrh = navrh;
    return this;
  }

  /**
   * Get navrh
   * @return navrh
   **/
  @JsonProperty("navrh")
  @Schema(description = "")
  public String getNavrh() {
    return navrh;
  }

  public void setNavrh(String navrh) {
    this.navrh = navrh;
  }

  public SavedRequest indextime(Date indextime) {
    this.indextime = indextime;
    return this;
  }

  /**
   * Get indextime
   * @return indextime
   **/
  @JsonProperty("indextime")
  @Schema(description = "")
  @Valid
  public Date getIndextime() {
    return indextime;
  }

  public void setIndextime(Date indextime) {
    this.indextime = indextime;
  }

  public SavedRequest user(String user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   **/
  @JsonProperty("user")
  @Schema(description = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public SavedRequest state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   **/
  @JsonProperty("state")
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SavedRequest savedRequest = (SavedRequest) o;
    return Objects.equals(this.id, savedRequest.id) &&
        Objects.equals(this.navrh, savedRequest.navrh) &&
        Objects.equals(this.indextime, savedRequest.indextime) &&
        Objects.equals(this.user, savedRequest.user) &&
        Objects.equals(this.state, savedRequest.state) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, navrh, indextime, user, state, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SavedRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    navrh: ").append(toIndentedString(navrh)).append("\n");
    sb.append("    indextime: ").append(toIndentedString(indextime)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
